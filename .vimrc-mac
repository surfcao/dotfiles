"pathogen
"execute pathogen#infect()
"
set nocompatible              " be iMproved, required
filetype off                  " required

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'reedes/vim-pencil'
Plugin 'jalvesaq/Nvim-R'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'vim-scripts/Solarized'
"Plugin 'morhetz/gruvbox'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'ervandew/supertab'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'lervag/vimtex'
let g:vimtex_latexmk_continuous=0
Plugin 'vim-scripts/LanguageTool'
let g:SuperTabDefaultCompletionType = '<C-n>'
let g:SuperTabCrMapping = 0
call vundle#end()      
filetype plugin indent on

syntax on

set ic
set hlsearch
set lbr
set tabstop=8
set shiftwidth=8

set tw=75
set formatoptions+=nt
set wrapmargin=0

"map fm {v}!par -w75<CR>
"vmap fm !par -w75<CR>
set formatprg=par\ -w75
set incsearch
set wrap
set linebreak

"for macvim
set backspace=indent,eol,start

set spell spelllang=en_us
set spellfile=$HOME/Dropbox/backup/spell/en.utf-8.add
hi SpellBad ctermbg=22
set spell
" Under latex, this is a workaround only works for non-comments
syntax spell toplevel
set dictionary+=/usr/share/dict/words
set complete+=k
set thesaurus+=/Users/guofeng/.vim/thesaurus/mthesaur.txt

set autowriteall

set history=1000
set undolevels=1000
set title "change the terminal's title
set showmatch
set hidden
set noruler "hide the status line
set number
set nonumber " No line numbering
" some shortcuts
let mapleader = "\<Space>"
let maplocalleader = ","
nmap <Leader>q :nohlsearch<CR>
nnoremap <Leader>w :w<CR>
vmap <Leader>y "+y
vmap <Leader>d "+d
nmap <Leader>p "+p
nmap <Leader>P "+P
vmap <Leader>p "+p
vmap <Leader>P "+P
nmap <Leader>q :nohlsearch<CR>
" buffer switch
nnoremap <LocalLeader>b :ls<CR>
nnoremap <LocalLeader>p :bp<CR>
nnoremap <LocalLeader>n :bn<CR>
nnoremap <LocalLeader>g :e#<CR>

" Window 
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <LocalLeader>o <C-w>o


map j gj
map k gk

""""solarized colorscheme
"set background=dark 
set background=light 
set t_Co=256
" option name default optional
let g:solarized_termcolors= 256
if &t_Co<256 && !has('gui_running')
	let g:solarized_termcolors= 16
endif
let g:solarized_termtrans = 1 | 0
let g:solarized_degrade = 0 | 0
let g:solarized_bold = 1 | 0 
let g:solarized_underline = 1 | 0
"Most terminals (including screen) don't handle italics right, but urxvt
"can. 
let g:solarized_italic = 0 | 1 
let g:solarized_contrast = "high"| "normal" or "low" 
let g:solarized_visibility= "high"| "normal" or "low"
colorscheme solarized
"colorscheme gruvbox
highlight LineNr ctermbg=NONE

"""""""""""""""""""
"""   Snippet   """
"""""""""""""""""""
 
" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger='<tab>'
let g:UltiSnipsJumpForwardTrigger='<tab>'
let g:UltiSnipsJumpBackwardTrigger='<s-tab>'

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"

"""""""""""""""""""
"""    Latex    """
"""""""""""""""""""
let g:tex_flavor = "latex"

autocmd FileType tex setlocal iskeyword+=:,-

"inoremap { {}<ESC>i
"inoremap [ []<ESC>i
"inoremap ( ()<ESC>i

" make going to a line number easier.
"nnoremap <CR> G

"""""""""""""""""""
"""    R        """
"""""""""""""""""""

" R script settings
"let maplocalleader = ","
"vmap r <Plug>RDSendSelection
"nmap r <Plug>RDSendLine
let R_in_buffer = 0
let R_applescript = 0
let R_tmux_split = 1
let R_vsplit=1
"let R_applescript=0
"
"let vimrplugin_applescript=0
"let vimrplugin_vsplit=1
"let vimrplugin_assign = 0
"
""""""""""""""""""""""
""""Language Check"""
""""""""""""""""""""""
let g:languagetool_jar='$HOME/mytools/LanguageTool-3.6/languagetool-commandline.jar'
